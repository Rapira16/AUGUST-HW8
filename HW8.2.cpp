#include <iostream>
using namespace std;
class Ex
{
    public:                     //Написать класс Ex, хранящий вещественное число x и имеющий конструктор по вещественному числу, инициализирующий x значением параметра.
    int x;
    Ex(const int &m_x):x(m_x){}
};
 
class Bar //Написать класс Bar, хранящий вещественное число y (конструктор по умолчанию инициализирует его нулем) и имеющий метод set с единственным вещественным параметром a. Если y + a > 100, возбуждается исключение типа Ex с данными a*y, иначе в y заносится значение a.
{
    private:
    int y;
    
    public:
    Bar(){y=0;}
    void set(const int &a){
        if(y+a > 100)
        {
            throw Ex(y * a);
            
        } else {
            y = a;
        }
    }
    
};
 
int main() //В функции main завести переменную класса Bar и в цикле в блоке try вводить с клавиатуры целое n. Использовать его в качестве параметра метода set до тех пор, пока не будет введено 0. В обработчике исключения выводить сообщение об ошибке, содержащее данные объекта исключения.

{
    Bar bar;
    int n;
    while(cin >> n && n!=0){
        
        try
        {
            bar.set(n);
        } 
        catch(Ex &err)
        {
            cerr << "Exception:" << err.n << endl;
        }
    }
    return 0;
}